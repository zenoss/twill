=======================
twill Extension Modules
=======================

.. contents::

Several different extension modules are distributed with twill, under
'twill.extensions'.

check_links -- a simple link checker
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A simple link checker is included with twill.  To use it, do ::

   go <page>

   extend_with check_links
   check_links

'check_links' will visit each link on the current page and verify that
the HTTP status code is 200 (success).  A list of failing links will be
printed out at the end of the function.

The 'check_links' function takes an optional argument, a regexp to filter
for links that should be checked.  By default the filter matches everything;
if you only wanted to check links on e.g. idyll.org, you could do ::

   go http://idyll.org/
   check_links .*\.idyll\.org

A few notes:

  * 'follow' is used to visit each link, so the referrer URL should
    be set correctly.

  * HTTP basic authentication and cookies work as you'd expect, so you
    can set up twill with all of the permissions necessary to visit restricted
    links & only then run check_links.

match_parse -- extensions for slicing and dicing variables with regexps
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The 'match_parse' extension module contains a number of functions for
dealing with multiple matches, etc.  Here's some example code: ::

   extend_with match_parse
   go http://www.idyll.org/

   split "org"
   echo __matchlist__

   findall "t."
   echo __matchlist__

   split "org"
   popmatch 0
   getmatch test 'm[0].split()'
   showvar test

   split "org"
   setmatch "m.split()[0]"

   popmatch 0
   echo __matchlist__
   echo __match__

mailman_sf -- discard spam messages from your SourceForge mailing lists
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The 'mailman_sf' extension module contains two functions, 'discard_all_messages'
and 'exit_if_empty'.  Here's some example code: ::

  # load in the mailman_sf extensions module
  extend_with mailman_sf

  # unfortunately we have to hard-code in the mailing list name for
  # the moment.  not sure how to do substitutions here.
  go https://lists.sourceforge.net/lists/admindb/pywx-announce

  # fill out the page with the list password.
  getpassword "Enter list password: "
  formvalue 1 adminpw __password__
  submit 0
  code 200

  # if there aren't any messages on the page, exit.
  exit_if_empty

  # if not empty, discard all messages & submit
  discard_all_messages
  submit 0
