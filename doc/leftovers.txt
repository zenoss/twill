=====================================================
twill: a simple language for testing Web applications
=====================================================

.. contents::

What is 'twill'?
----------------

twill is a tool for Web application testing.  twill implements a
simple scripting language that can be used interactively or from
scripts; this language contains commands for browsing the Web,
filling out forms, and asserting various conditions.  twill can
explore Web sites both interactively and via a script.

twill scripts look something like this:

::

   # go to my Quixote demo page
   go http://issola.caltech.edu/~t/qwsgi/qwsgi-demo.cgi/

   # go to the widgets sub-page
   go ./widgets
   showforms

   # fill out the form
   formclear 1
   fv 1 name test
   fv 1 password testpass
   fv 1 confirm yes
   showforms

   # submit form
   submit 0

   # show results
   show

   # confirm success, etc.
   code 200
   find testpass

twill commands can also be used directly from Python.

The primary use for twill is to do automated testing of Web
applications via a straightforward declarative language.  However,
it also provides a friendly, programmable interface for interacting
with Web sites.

twill was originally based on Cory Dodt's "Python Browser Poseur",
a.k.a. PBP_.  It has diverged quite a bit since then.

Use cases
~~~~~~~~~

Here are some of things that I'm using twill for, or that I plan to use
it for:

 * unit-testing Web applications, esp. WSGI_ and Quixote_ Python applications;

 * checking that Web sites are alive;

 * demonstrating specific problems with my (and other) Web sites;

 * interacting with Mailman lists;

 * stress-testing applications with multiple hits;

Send me an e-mail if you have additional uses.


Requirements, Availability and Licensing
----------------------------------------

twill is developed in python 2.3, and should work fine with python 2.4.
You don't need any other software; both pyparsing_ and mechanize_ are
required, but they are included with twill.

If ``tidy`` is installed and available in the path, twill will use it
in several ways.  See below for more information.

Version 0.8 is available for download here_.  The latest development
version can always be found at twill-latest.tar.gz_.

Installing twill (the easy way)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The best way to obtain twill is to use `easy_install/setuptools`_.

After `installing easy_install`_, just type: ::

   easy_install twill

Using twill
-----------

To run twill, type 'twill-sh' and try

::

   go http://www.python.org/
   show
   showforms
   showhistory

You can also run scripts (e.g. the files in ``examples/``) directly by
specifying them on the command line.

See the output of 'twill-sh -h' for help on command line options.

There are several example scripts under the ``examples/``
subdirectory.  Included in the examples is a test of the Quixote demo
site, and a script for clearing out SourceForge Mailman lists.  The
latter script makes use of the (very simple!) extension feature, if
you're interested...

Proxy servers
~~~~~~~~~~~~~

twill understands the ``http_proxy`` environment variable generically
used to set proxy server information.  To use a proxy in UNIX or
Windows, just set the ``http_proxy`` environment variable, e.g. ::

   % export http_proxy="http://www.someproxy.com:3128"

or ::

   % setenv http_proxy="http://www.someotherproxy.com:3148"

Recording scripts
~~~~~~~~~~~~~~~~~

Writing twill scripts is boring.  One simple way to get at least a
rough initial script is to use the maxq_ recorder to generate a twill
script.  maxq_ acts as an HTTP proxy and records all HTTP traffic; I
have written a simple twill script generator for it.  The script
generator and installation docs are included in the twill distribution
under the directory ``maxq/``.

Running and using tidy
~~~~~~~~~~~~~~~~~~~~~~

The ``tidy`` program does a nice job of producing correct HTML from
mangled, broken, eeevil Web pages.  By default, twill will run pages
through ``tidy`` before processing them.  This is on by default
because the Python libraries that parse HTML are very bad at dealing
with incorrect HTML, and will often return incorrect results on "real
world" Web pages.

To disable this feature, set ``config do_run_tidy 0``.

If ``tidy`` is not installed, twill will silently ignore it.  It may
be desirable to *require* a functioning ``tidy`` installation; so, to fail
when ``tidy`` *isn't* installed, set ``config tidy_should_exist 1``.

See the `tidy page`_ for more information on ``tidy``.

Miscellaneous implementation details
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 * twill ignores robots.txt.

 * http-equiv=refresh headers are handled immediately, independent of the
   'pause' component of the 'content' attribute.

 * twill does not understand javascript.

.. _PBP: http://pbp.berlios.de/
.. _maxq: http://maxq.tigris.org/
.. _mechanize: http://wwwsearch.sf.net/
.. _pyparsing: http://pyparsing.sourceforge.net/
.. _funkload: http://funkload.nuxeo.org/
.. _webunit: http://mechanicalcat.net/tech/webunit/
.. _webtest: http://www.cherrypy.org/file/trunk/cherrypy/test/webtest.py
.. _zope.testbrowser: http://cheeseshop.python.org/pypi?:action=display&name=zope.testbrowser
.. _zope.testbrowser README: http://svn.zope.org/*checkout*/Zope3/trunk/src/zope/testbrowser/README.txt
.. _Selenium: http://confluence.public.thoughtworks.org/display/SEL/Home
.. _article on Selenium: http://agiletesting.blogspot.com/2005/10/article-on-selenium-in-october-issue.html

.. _WSGI applications: http://www.python.org/peps/pep-0333.html
.. _WSGI:  http://www.python.org/peps/pep-0333.html
.. _Quixote: http://www.mems-exchange.org/software/quixote/
.. _mechanoid: http://python.org/pypi/mechanoid
.. _twill in Javascript: http://blog.ianbicking.org/twill-in-javascript.html

.. _PAMIE: http://pamie.sourceforge.net/
.. _PAMIE examples page: tutoriala.html
.. _PyXPCOM: http://kb.mozillazine.org/PyXPCOM
.. _tidy page: http://tidy.sourceforge.net/
.. _easy_install/setuptools: http://peak.telecommunity.com/DevCenter/EasyInstall
.. _installing easy_install: http://peak.telecommunity.com/DevCenter/EasyInstall#installing-easy-install
